# Generated, please do not edit.
name: Export Tanka environments
description: Export Tanka environments

inputs:
  source-repository:
    description: Path to source repository relative to the workspace
    required: true
  tanka-root:
    description: Tanka root relative to the source-repository
    required: true
  target-directory:
    description: Directory for the manifests in the target-repository
    required: true
  target-repository:
    description: Path to target repository relative to the workspace
    required: true

outputs:
  changed_files:
    description: List of files changed on the target repository
    value: "${{ steps.changed.outputs.changed_files }}"
  commit_sha:
    description: Commit sha on the target repository
    value: "${{ steps.commit.outputs.sha }}"
  files_changed:
    description: "Return 'true' when files have changed on the target repository"
    value: "${{ steps.changed.outputs.files_changed }}"

runs:
  using: composite

  steps:
    - name: Checkout
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      with:
        path: _tanka-exporter-checkout
        ref: "${{ env.action_ref }}"
        repository: "${{ env.action_repo }}"
      env:
        action_ref: "${{ github.action_ref }}"
        action_repo: "${{ github.action_repository }}"

    - name: Install Tanka
      uses: "./_tanka-exporter-checkout/.github/actions/tanka-install"

    - name: Install jrsonnet
      uses: "./_tanka-exporter-checkout/.github/actions/jrsonnet-install"

    - name: Install Jsonnet
      uses: kobtea/setup-jsonnet-action@v2

    - name: Find changed paths
      id: filter
      uses: dorny/paths-filter@v3
      with:
        filters: |
          "addedModifiedJsonnet":
            - "added|modified": "${{ inputs.tanka-root }}/**"
          "deletedEnvs":
            - "deleted": "${{ inputs.tanka-root }}/environments/**/main.jsonnet"
          "deletedJsonnet":
            - "deleted": "${{ inputs.tanka-root }}/**"
          "jsonnet":
            - "${{ inputs.tanka-root }}/**"
        list-files: json
        working-directory: "${{ inputs.source-repository }}"

    - name: Find modified Tanka environments
      id: modified
      if: "${{ steps.filter.outputs.addedModifiedJsonnet == 'true' }}"
      run: |
        MODIFIED_FILES=$(jrsonnet -S -e "$SCRIPT")
        MODIFIED_ENVS=$(tk tool importers $MODIFIED_FILES | tr '\n' ' ')
        if [[ -n ${MODIFIED_ENVS} ]]; then
            ARGS="$MODIFIED_ENVS --merge-strategy=replace-envs"
            echo "args=$ARGS" >> $GITHUB_OUTPUT
        fi
      shell: bash
      working-directory: "${{ github.workspace }}/${{ inputs.source-repository }}/${{ inputs.tanka-root }}"
      env:
        SCRIPT: |
          local prefixLength = std.length('${{ inputs.tanka-root }}/');
          std.join(' ',
            std.map(function(f) f[prefixLength:], ${{ steps.filter.outputs.addedModifiedJsonnet_files }})
            + std.map(function(f) 'deleted:'+f[prefixLength:], ${{ steps.filter.outputs.deletedJsonnet_files }})
          )

    - name: Find deleted Tanka environments
      id: deleted
      if: "${{ steps.filter.outputs.deletedEnvs == 'true' }}"
      run: |
        DELETED_ARGS=$(jrsonnet -S -e "std.join('--merge-deleted-envs ', $DELETED_FILES)")
        echo "args=$DELETED_ARGS" >> $GITHUB_OUTPUT
      shell: bash
      env:
        DELETED_FILES: "${{ steps.filter.outputs.deletedEnvs_files }}"

    - name: Find out whether to do a bulk export
      id: bulk
      if: "${{ github.event_name == 'workflow_dispatch' }}"
      run: |
        echo "bulk=true" >> $GITHUB_OUTPUT
        ARGS="environments/ --merge-strategy=fail-on-conflicts"
        echo "args=$ARGS" >> $GITHUB_OUTPUT
      shell: bash

    - name: Clear out manifests for bulk export
      if: "${{ steps.bulk.outputs.bulk == 'true' }}"
      run: rm -rf $MANIFESTS_DIR/*
      shell: bash
      working-directory: "${{ github.workspace }}/${{ inputs.target-repository }}"
      env:
        MANIFESTS_DIR: "${{ inputs.target-directory }}"

    - name: Compose Tanka arguments
      id: args
      run: |
        if [[ $BULK = 'true' ]]; then
            ARGS="$BULK_ARGS"
            echo "args=$ARGS" >> $GITHUB_OUTPUT
        elif [[ -n $MODIFIED_ARGS || -n $DELETED_ARGS ]]; then
            ARGS="$MODIFIED_ARGS $DELETED_ARGS"
            echo "args=$ARGS" >> $GITHUB_OUTPUT
        else
            echo "noop=true" >> $GITHUB_OUTPUT
        fi
      shell: bash
      env:
        BULK: "${{ steps.bulk.outputs.bulk }}"
        BULK_ARGS: "${{ steps.bulk.outputs.args }}"
        DELETED_ARGS: "${{ steps.deleted.outputs.args }}"
        MODIFIED_ARGS: "${{ steps.modified.outputs.args }}"

    - name: Export manifests with Tanka
      id: export
      if: "${{ steps.args.outputs.noop != 'true' }}"
      run: |
        tk export \
        $EXPORT_DIR \
        $ARGS \
        --recursive \
        --format "$EXPORT_FORMAT"
      shell: bash
      working-directory: "${{ github.workspace }}/${{ inputs.source-repository }}/${{ inputs.tanka-root }}"
      env:
        ARGS: "${{ steps.args.outputs.args }}"
        EXPORT_DIR: "${{ github.workspace }}/${{ inputs.target-repository }}/${{ inputs.target-directory }}"
        EXPORT_FORMAT: "{{ env.metadata.labels.app }}/{{ env.metadata.labels.cluster }}/{{ env.spec.namespace }}/{{ .kind }}-{{ .metadata.name }}"

    - name: Check for duplicate resources in cluster
      if: "${{ steps.args.outputs.noop != 'true' }}"
      run: |
        cat manifest.json
        jrsonnet -S "$SCRIPT_PATH"/generate_resources.jsonnet > resources.jsonnet
        jrsonnet "$SCRIPT_PATH"/test_for_duplicate_resources.jsonnet
        rm resources.jsonnet
      shell: bash
      working-directory: "${{ github.workspace }}/${{ inputs.target-repository }}/${{ inputs.target-directory }}"
      env:
        SCRIPT_PATH: "./_tanka-exporter-checkout/.github/jsonnet/tanka-exporter/scripts"

    - name: Check if manifests changed
      id: changed
      uses: tj-actions/verify-changed-files@v20
      with:
        path: "${{ inputs.target-repository }}"

    - name: Check out branch for pull_request commit
      if: "${{ github.event_name == 'pull_request' && steps.changed.outputs.files_changed == 'true' }}"
      run: git checkout -b pr-$PR
      shell: bash
      working-directory: "${{ github.workspace }}/${{ inputs.target-repository }}"
      env:
        PR: "${{ github.event.number }}"

    - name: Make a commit to the manifests repository
      id: commit
      if: "${{ steps.changed.outputs.files_changed == 'true' }}"
      run: |
        git add $MANIFESTS_DIR
        git commit -m "$(git -C $SOURCE_REPO show -s --format=%B)$MESSAGE"
        git log -1 --format=fuller
        git config --global push.autoSetupRemote true
        echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
      shell: bash
      working-directory: "${{ github.workspace }}/${{ inputs.target-repository }}"
      env:
        GIT_AUTHOR_EMAIL: "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
        GIT_AUTHOR_NAME: "${{ github.actor }}"
        GIT_COMMITTER_EMAIL: "41898282+github-actions[bot]@users.noreply.github.com"
        GIT_COMMITTER_NAME: "github-actions[bot]"
        MANIFESTS_DIR: "${{ inputs.target-directory }}"
        MESSAGE: |
          
          --
          
          - Event: ${{ github.event_name }}
          - Branch: ${{ github.base_ref }}
          - Build link: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        SOURCE_REPO: "${{ github.workspace }}/${{ inputs.source-repository }}"

    - name: Force push on pull_request
      if: "${{ github.event_name == 'pull_request' && steps.changed.outputs.files_changed == 'true' }}"
      run: git push -u -f origin pr-$PR
      shell: bash
      working-directory: "${{ github.workspace }}/${{ inputs.target-repository }}"
      env:
        PR: "${{ github.event.number }}"

    - name: Push on main
      if: "${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main' && steps.changed.outputs.files_changed == 'true' }}"
      run: git push
      shell: bash
      working-directory: "${{ github.workspace }}/${{ inputs.target-repository }}"

    - name: Make no-op comment
      if: "${{ github.event_name == 'pull_request' && steps.changed.outputs.files_changed != 'true' }}"
      uses: thollander/actions-comment-pull-request@v2
      with:
        comment_tag: "${{ github.workflow }}-difflinks"
        message: No changes
        mode: recreate

    - name: Make changes comment
      if: "${{ github.event_name == 'pull_request' && steps.changed.outputs.files_changed == 'true' }}"
      uses: thollander/actions-comment-pull-request@v2
      with:
        comment_tag: "${{ github.workflow }}-difflinks"
        message: |
          permalink: ${{ github.server_url }}/${{ github.repository }}/compare/${{ github.event.pull_request.base.sha }}...${{ steps.commit.outputs.sha }}
          relative: ${{ github.server_url }}/${{ github.repository }}/compare/main...pr-${{ github.event.number }}
        mode: recreate