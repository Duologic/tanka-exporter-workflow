# Generated with `make gen`
description: ""
inputs:
  source-repository:
    description: "Path to source repository relative to the workspace"
    required: true
  tanka-root:
    description: "Tanka root relative to the source-repository"
    required: true
  target-directory:
    description: "Directory for the manifests in the target-repository"
    required: true
  target-repository:
    description: "Path to target repository relative to the workspace"
    required: true
name: "Export Tanka environments"
runs:
  steps:
    - env:
        action_ref: "${{ github.action_ref }}"
        action_repo: "${{ github.action_repository }}"
      name: "Checkout"
      uses: "actions/checkout@v4"
      with:
        path: "_tanka-exporter-checkout"
        ref: "${{ env.action_ref }}"
        repository: "${{ env.action_repo }}"
    - name: "Install Tanka"
      uses: "./_tanka-exporter-checkout/.github/actions/tanka-install"
    - name: "Install Jsonnet"
      uses: "kobtea/setup-jsonnet-action@v2"
    - id: "filter"
      name: "Find changed paths"
      uses: "dorny/paths-filter@v3"
      with:
        filters: |
          "addedModifiedJsonnet":
            - "added|modified": "${{ inputs.tanka-root }}/**"
          "deletedEnvs":
            - "deleted": "${{ inputs.tanka-root }}/environments/**/main.jsonnet"
          "deletedJsonnet":
            - "deleted": "${{ inputs.tanka-root }}/**"
          "jsonnet":
            - "${{ inputs.tanka-root }}/**"
        list-files: "json"
        working-directory: "${{ inputs.source-repository }}"
    - env:
        SCRIPT: |
          local prefixLength = std.length('${{ inputs.tanka-root }}/');
          std.join(' ',
            std.map(function(f) f[prefixLength:], ${{ steps.filter.outputs.addedModifiedJsonnet_files }})
            + std.map(function(f) 'deleted:'+f[prefixLength:], ${{ steps.filter.outputs.deletedJsonnet_files }})
          )
      id: "modified"
      if: "${{ steps.filter.outputs.addedModifiedJsonnet == 'true' }}"
      name: "Find modified Tanka environments"
      run: |
        MODIFIED_FILES=$(jsonnet -S -e "$SCRIPT")
        MODIFIED_ENVS=$(tk tool importers $MODIFIED_FILES)
        if [[ -n ${MODIFIED_ENVS} ]]; then
            ARGS="$MODIFIED_ENVS --merge-strategy=replace-envs"
            echo "args=$ARGS" >> $GITHUB_OUTPUT
        fi
      shell: "bash"
      working-directory: "${{ github.workspace }}/${{ inputs.source-repository }}/${{ inputs.tanka-root }}"
    - env:
        DELETED_FILES: "${{ steps.filter.outputs.deletedEnvs_files }}"
      id: "deleted"
      if: "${{ steps.filter.outputs.deletedEnvs == 'true' }}"
      name: "Find deleted Tanka environments"
      run: |
        DELETED_ARGS=$(jsonnet -S -e "std.join('--merge-deleted-envs ', $DELETED_FILES)")
        echo "args=$DELETED_ARGS" >> $GITHUB_OUTPUT
      shell: "bash"
    - id: "bulk"
      if: "${{ github.event_name == 'workflow_dispatch' }}"
      name: "Find out whether to do a bulk export"
      run: |
        echo "bulk=true" >> $GITHUB_OUTPUT
        ARGS="environments/ --merge-strategy=fail-on-conflicts"
        echo "args=$ARGS" >> $GITHUB_OUTPUT
      shell: "bash"
    - env:
        MANIFESTS_DIR: "${{ inputs.target-directory }}"
      if: "${{ steps.bulk.outputs.bulk == 'true' }}"
      name: "Clear out manifests for bulk export"
      run: "rm -rf $MANIFESTS_DIR/*/"
      shell: "bash"
      working-directory: "${{ github.workspace }}/${{ inputs.target-repository }}"
    - env:
        BULK: "${{ steps.bulk.outputs.bulk }}"
        BULK_ARGS: "${{ steps.bulk.outputs.args }}"
        DELETED_ARGS: "${{ steps.deleted.outputs.args }}"
        MODIFIED_ARGS: "${{ steps.modified.outputs.args }}"
      id: "args"
      name: "Compose Tanka arguments"
      run: |
        if [[ $BULK = 'true' ]]; then
            ARGS="$BULK_ARGS"
            echo "args=$ARGS" >> $GITHUB_OUTPUT
        elif [[ -n $MODIFIED_ARGS || -n $DELETED_ARGS ]]; then
            ARGS="$MODIFIED_ARGS $DELETED_ARGS"
            echo "args=$ARGS" >> $GITHUB_OUTPUT
        else
            echo "noop=true" >> $GITHUB_OUTPUT
        fi
      shell: "bash"
    - env:
        ARGS: "${{ steps.args.outputs.args }}"
        EXPORT_DIR: "${{ github.workspace }}/${{ inputs.target-repository }}/${{ inputs.target-directory }}/"
        EXPORT_FORMAT: "{{ if env.metadata.labels.cluster_name }}{{ env.metadata.labels.cluster_name }}/{{ end }}{{ if .metadata.namespace }}{{ .metadata.namespace }}{{ else }}_cluster{{ end }}/{{ .kind }}-{{ .metadata.name }}"
      id: "export"
      if: "${{ steps.args.outputs.noop != 'true' }}"
      name: "Export manifests with Tanka"
      run: |
        tk export \
        $EXPORT_DIR \
        $ARGS \
        --recursive \
        --format "$EXPORT_FORMAT"
      shell: "bash"
      working-directory: "${{ github.workspace }}/${{ inputs.source-repository }}/${{ inputs.tanka-root }}"
    - id: "changed"
      name: "Check if manifests changed"
      uses: "tj-actions/verify-changed-files@v20"
      with:
        path: "${{ inputs.target-repository }}"
    - env:
        PR: "${{ github.event.number }}"
      if: "${{ github.event_name == 'pull_request' && steps.changed.outputs.files_changed == 'true' }}"
      name: "Check out branch for pull_request commit"
      run: "git checkout -b pr-$PR"
      shell: "bash"
      working-directory: "${{ github.workspace }}/${{ inputs.target-repository }}"
    - env:
        GIT_AUTHOR_EMAIL: "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
        GIT_AUTHOR_NAME: "${{ github.actor }}"
        GIT_COMMITTER_EMAIL: "41898282+github-actions[bot]@users.noreply.github.com"
        GIT_COMMITTER_NAME: "github-actions[bot]"
        MANIFESTS_DIR: "${{ inputs.target-directory }}"
        MESSAGE: |
          
          --
          
          - Event: ${{ github.event_name }}
          - Branch: ${{ github.base_ref }}
          - Build link: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        SOURCE_REPO: "${{ github.workspace }}/${{ inputs.source-repository }}"
      id: "commit"
      if: "${{ steps.changed.outputs.files_changed == 'true' }}"
      name: "Make a commit to the manifests repository"
      run: |
        git add $MANIFESTS_DIR
        git commit -m "$(git -C $SOURCE_REPO show -s --format=%B)$MESSAGE"
        git log -1 --format=fuller
        git config --global push.autoSetupRemote true
        echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
      shell: "bash"
      working-directory: "${{ github.workspace }}/${{ inputs.target-repository }}"
    - env:
        PR: "${{ github.event.number }}"
      if: "${{ github.event_name == 'pull_request' && steps.changed.outputs.files_changed == 'true' }}"
      name: "Force push on pull_request"
      run: "git push -u -f origin pr-$PR"
      shell: "bash"
      working-directory: "${{ github.workspace }}/${{ inputs.target-repository }}"
    - if: "${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && steps.changed.outputs.files_changed == 'true' }}"
      name: "Push on main"
      run: "git push"
      shell: "bash"
      working-directory: "${{ github.workspace }}/${{ inputs.target-repository }}"
    - if: "${{ github.event_name == 'pull_request' && steps.changed.outputs.files_changed != 'true' }}"
      name: "Make no-op comment"
      uses: "thollander/actions-comment-pull-request@v2"
      with:
        comment_tag: "${{ github.workflow }}-difflinks"
        message: "No changes"
        mode: "recreate"
    - if: "${{ github.event_name == 'pull_request' && steps.changed.outputs.files_changed == 'true' }}"
      name: "Make changes comment"
      uses: "thollander/actions-comment-pull-request@v2"
      with:
        comment_tag: "${{ github.workflow }}-difflinks"
        message: |
          permalink: ${{ github.server_url }}/${{ github.repository }}/compare/${{ github.event.pull_request.base.sha }}...${{ steps.commit.outputs.sha }}
          relative: ${{ github.server_url }}/${{ github.repository }}/compare/main...pr-${{ github.event.number }}
        mode: "recreate"
  using: "composite"