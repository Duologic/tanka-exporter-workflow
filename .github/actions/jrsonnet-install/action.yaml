# Generated with `make gen`
description: "Install jrsonnet from the GitHub releases"
inputs:
  version:
    default: "0.5.0-pre96-test"
    description: "Version of jrsonnet to install."
name: "Install jrsonnet"
runs:
  steps:
    - id: "restore"
      name: "Restore cache jrsonnet-linux-amd64-${{ inputs.version }}"
      uses: "actions/cache/restore@v4"
      with:
        key: "jrsonnet-linux-amd64-${{ inputs.version }}"
        path: "${{ github.workspace }}/bin"
    - id: "fetch_asset"
      if: "steps.restore.outputs.cache-hit != 'true'"
      name: "Fetch Github Release Asset"
      uses: "dsaltares/fetch-gh-release-asset@master"
      with:
        file: "jrsonnet-linux-amd64"
        repo: "CertainLach/jrsonnet"
        target: "${{ github.workspace }}/bin/jrsonnet"
        version: "tags/v${{ inputs.version }}"
    - if: "steps.fetch_asset.outcome == 'success'"
      name: "Make jrsonnet executable"
      run: "chmod +x ${{ github.workspace }}/bin/jrsonnet"
      shell: "sh"
    - name: "Add binary to path"
      run: "echo \"${{ github.workspace }}/bin\" >> $GITHUB_PATH"
      shell: "sh"
    - id: "save"
      if: "steps.fetch_asset.outcome == 'success'"
      name: "Save to cache jrsonnet-linux-amd64-${{ inputs.version }}"
      uses: "actions/cache/save@v4"
      with:
        key: "${{ steps.restore.outputs.cache-primary-key }}"
        path: "${{ github.workspace }}/bin"
  using: "composite"