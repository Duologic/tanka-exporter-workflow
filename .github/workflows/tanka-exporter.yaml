# Generated with `make gen`
concurrency:
  cancel-in-progress: "${{ github.ref != 'master' }}"
  group: "${{ github.workflow }}-${{ github.ref }}"
jobs:
  export:
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout source repository"
        uses: "actions/checkout@v4"
        with:
          path: "_source"
      - name: "Checkout manifest repository"
        uses: "actions/checkout@v4"
        with:
          path: "_manifests"
          ref: "main"
      - uses: "./_source/.github/actions/install-tanka"
      - uses: "kobtea/setup-jsonnet-action@v2"
      - id: "filter"
        name: "Find changed paths"
        uses: "dorny/paths-filter@v3"
        with:
          filters: |
            "addedModifiedJsonnet":
              - "added|modified": "jsonnet/**"
            "deletedEnvs":
              - "deleted": "jsonnet/environments/**/main.jsonnet"
            "deletedJsonnet":
              - "deleted": "jsonnet/**"
            "jsonnet":
              - "jsonnet/**"
          list-files: "json"
          working-directory: "_source"
      - env:
          SCRIPT: |
            std.join(' ',
              std.map(function(f) f[8:], ${{ steps.filter.outputs.addedModifiedJsonnet_files }})
              + std.map(function(f) 'deleted:'+f[8:], ${{ steps.filter.outputs.deletedJsonnet_files }})
            )
        id: "modified"
        if: "${{ steps.filter.outputs.addedModifiedJsonnet == 'true' }}"
        name: "Find modified Tanka environments"
        run: |
          MODIFIED_FILES=$(jsonnet -S -e "$SCRIPT")
          MODIFIED_ENVS=$(tk tool importers $MODIFIED_FILES)
          if [[ -n ${MODIFIED_ENVS} ]]; then
              ARGS="$MODIFIED_ENVS --merge-strategy=replace-envs"
              echo "args=$ARGS" >> $GITHUB_OUTPUT
          fi
        working-directory: "_source/jsonnet"
      - env:
          DELETED_FILES: "${{ steps.filter.outputs.deletedEnvs_files }}"
        id: "deleted"
        if: "${{ steps.filter.outputs.deletedEnvs == 'true' }}"
        name: "Find deleted Tanka environments"
        run: |
          DELETED_ARGS=$(jsonnet -S -e "std.join('--merge-deleted-envs ', $DELETED_FILES)")
          echo "args=$DELETED_ARGS" >> $GITHUB_OUTPUT
      - id: "bulk"
        if: "${{ github.event_name == 'workflow_dispatch' }}"
        name: "Find out whether to do a bulk export"
        run: |
          echo "bulk=true" >> $GITHUB_OUTPUT
          ARGS="environments/ --merge-strategy=fail-on-conflicts"
          echo "args=$ARGS" >> $GITHUB_OUTPUT
      - if: "${{ steps.bulk.outputs.bulk == 'true' }}"
        name: "Clear out manifests for bulk export"
        run: "rm -rf manifests/*/"
        working-directory: "_manifests"
      - env:
          BULK: "${{ steps.bulk.outputs.bulk }}"
          BULK_ARGS: "${{ steps.bulk.outputs.args }}"
          DELETED_ARGS: "${{ steps.deleted.outputs.args }}"
          MODIFIED_ARGS: "${{ steps.modified.outputs.args }}"
        id: "args"
        name: "Compose Tanka arguments"
        run: |
          if [ $BULK = 'true' ]; then
              ARGS="$BULK_ARGS"
              echo "args=$ARGS" >> $GITHUB_OUTPUT
          elif [[ -n $MODIFIED_ARGS || -n $DELETED_ARGS ]]; then
              ARGS="$MODIFIED_ARGS $DELETED_ARGS"
              echo "args=$ARGS" >> $GITHUB_OUTPUT
          else
              echo "noop=true" >> $GITHUB_OUTPUT
          fi
      - env:
          ARGS: "${{ steps.args.outputs.args }}"
          EXPORT_FORMAT: "{{ if env.metadata.labels.cluster_name }}{{ env.metadata.labels.cluster_name }}/{{ end }}{{ if .metadata.namespace }}{{.metadata.namespace}}{{ else }}_cluster{{ end }}/{{.kind}}-{{.metadata.name}}"
          MANIFESTS_DIR: "_manifests"
        id: "export"
        if: "${{ steps.args.outputs.noop != 'true' }}"
        name: "Export manifests with Tanka"
        run: |
          tk export \
          ../../$MANIFESTS_DIR/manifests/ \
          $ARGS \
          --recursive \
          --format '$EXPORT_FORMAT'
        working-directory: "_source/jsonnet"
      - id: "changed"
        name: "Check if manifests changed"
        uses: "tj-actions/verify-changed-files@v20"
        with:
          path: "_manifests"
      - env:
          PR: "${{ github.event.number }}"
        if: "${{ github.event_name == 'pull_request' && steps.changed.outputs.files_changed == 'true' }}"
        name: "Check out branch for pull_request commit"
        run: "git checkout -b pr-$PR"
        working-directory: "_manifests"
      - env:
          GIT_AUTHOR_EMAIL: "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
          GIT_AUTHOR_NAME: "${{ github.actor }}"
          GIT_COMMITTER_EMAIL: "41898282+github-actions[bot]@users.noreply.github.com"
          GIT_COMMITTER_NAME: "github-actions[bot]"
          MESSAGE: |
            
            --
            
            - Event: ${{ github.event_name }}
            - Branch: ${{ github.base_ref }}
            - Build link: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        id: "commit"
        if: "${{ steps.changed.outputs.files_changed == 'true' }}"
        name: "Make a commit to the manifests repository"
        run: |
          git add manifests/
          git commit -m "$(git -C ../ show -s --format=%B)$MESSAGE"
          git log -1 --format=fuller
          git config --global push.autoSetupRemote true
          echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
        working-directory: "_manifests"
      - env:
          PR: "${{ github.event.number }}"
        if: "${{ github.event_name == 'pull_request' && steps.changed.outputs.files_changed == 'true' }}"
        name: "Force push on pull_request"
        run: "git push -u -f origin pr-$PR"
        working-directory: "_manifests"
      - if: "${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && steps.changed.outputs.files_changed == 'true' }}"
        name: "Push on main"
        run: "git push"
        working-directory: "_manifests"
      - if: "${{ github.event_name == 'pull_request' && steps.changed.outputs.files_changed != 'true' }}"
        name: "Make no-op comment"
        uses: "thollander/actions-comment-pull-request@v2"
        with:
          comment_tag: "${{ github.workflow }}-difflinks"
          message: "No changes"
          mode: "recreate"
      - if: "${{ github.event_name == 'pull_request' && steps.changed.outputs.files_changed == 'true' }}"
        name: "Make changes comment"
        uses: "thollander/actions-comment-pull-request@v2"
        with:
          comment_tag: "${{ github.workflow }}-difflinks"
          message: |
            permalink: ${{ github.server_url }}/${{ github.repository }}/compare/${{ github.event.pull_request.base.sha }}...${{ steps.commit.outputs.sha }}
            relative: ${{ github.server_url }}/${{ github.repository }}/compare/main...pr-${{ github.event.number }}
          mode: "recreate"
"on":
  pull_request:
    paths:
      - "jsonnet/**"
      - ".github/**"
  push:
    branches:
      - "main"
    paths:
      - "jsonnet/**"
      - ".github/**"
  workflow_dispatch: {}
permissions:
  contents: "write"
  pull-requests: "write"